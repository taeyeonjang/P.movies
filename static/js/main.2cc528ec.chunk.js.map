{"version":3,"sources":["components/Movies.js","routes/Home.js","routes/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","id","title","medium_cover_image","summary","genres","to","src","length","slice","map","g","Home","useState","loading","setLoading","movies","setMovies","getMoives","a","fetch","json","data","useEffect","item","Detail","detail","setDetail","useParams","getMovie","movie","console","log","title_long","background_image","language","date_uploaded","rating","torrents","url","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAGe,SAASA,EAAT,GAAoE,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,mBAAoBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,OAErE,OACI,gCACA,6BAAI,cAAC,IAAD,CAAMC,GAAE,iBAAYL,GAApB,SAA2BC,MAC/B,qBAAKK,IAAKJ,IACV,2CAAcC,EAAQI,OAAS,IAAjB,UAA0BJ,EAAQK,MAAM,EAAG,KAA3C,OAAuDL,KACnE,+BACE,wDAA0BC,EAAOK,KAAI,SAACC,GAAD,OACrC,6BAAaA,GAAJA,YCTN,SAASC,IAEtB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,sEAERC,MAAM,0EAFE,8BAGdC,OAHc,OACVA,EADU,OAKhBJ,EAAUI,EAAKC,KAAKN,QACpBD,GAAW,GANK,2CAAH,qDAef,OALAQ,qBAAU,WACRL,MACE,IAIF,gCACE,2CACCJ,EACCE,EAAON,KAAI,SAACc,GAAD,OACX,cAACxB,EAAD,CACAC,GAAIuB,EAAKvB,GAETC,MAAOsB,EAAKtB,MACZC,mBAAoBqB,EAAKrB,mBACzBC,QAASoB,EAAKpB,QACdC,OAAQmB,EAAKnB,QAJRmB,EAAKvB,OAMZ,mDClCS,SAASwB,IAEpB,MAA8BZ,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KAEQ1B,EAAO2B,cAAP3B,GAGF4B,EAAQ,uCAAG,4BAAAV,EAAA,sEAEHC,MAAM,qDAAD,OAAsDnB,IAFxD,8BAGPoB,OAHO,OACVA,EADU,OAITM,EAAUN,EAAKC,KAAKQ,OACpBf,GAAW,GALF,2CAAH,qDAcd,OALAQ,qBAAU,WACNM,MACD,IACHE,QAAQC,IAAIN,GAGR,8BACKZ,EACD,gCACA,6BAAKY,EAAOO,aACZ,qBAAK1B,IAAKmB,EAAOQ,mBACjB,2CAAcR,EAAOS,YACrB,0CAAaT,EAAOU,iBACpB,0CAAaV,EAAOW,UACpB,6BACKX,EAAOY,SAAS5B,KAAI,SAACc,GAAD,OAAS,6BAAKA,EAAKe,cAGzC,OC9BA,SAASC,IAEtB,OAEG,cAAC,IAAD,UACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAZ,SACE,cAAChB,EAAD,MAEF,cAAC,IAAD,CAAOgB,KAAK,IAAZ,SACE,cAAC7B,EAAD,WCjBV,IAYe8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2cc528ec.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Movies({ id, title, medium_cover_image, summary, genres }){\n\n    return(\n        <div>\n        <h3><Link to={`/movie/${id}`}>{title}</Link></h3>\n        <img src={medium_cover_image}/>\n        <p>summary : {summary.length > 235 ? `${summary.slice(0, 235)}...` : summary}</p>\n          <ul>\n            <strong>genresðŸ‘‡</strong>{genres.map((g)=>\n            <li key={g}>{g}</li>\n              )}\n          </ul>\n      </div>\n      )\n}\n\nMovies.propTypes={\n    id : PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    medium_cover_image: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};","import React, { useState, useEffect } from 'react';\nimport Movies from '../components/Movies';\n\nexport default function Home(){\n\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  const getMoives = async () => {\n    const json = await(\n      await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n    ).json();\n  \n    setMovies(json.data.movies);\n    setLoading(true);\n\n  };\n\n  useEffect(()=> {\n    getMoives();\n   }, []);\n\n\n  return( \n    <div>\n      <h1>Movie App</h1>\n      {loading ? \n        movies.map((item)=> (\n        <Movies \n        id={item.id}\n        key={item.id}\n        title={item.title} \n        medium_cover_image={item.medium_cover_image} \n        summary={item.summary} \n        genres={item.genres} />\n      )):(\n      <strong>Loading...</strong>\n      )}\n    </div>\n  )\n}","import { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nexport default function Detail(){\n\n    const [loading, setLoading] = useState(false);\n    const [detail, setDetail] = useState([]);\n\n    const { id } = useParams();\n    // const id = useParams().id\n\n    const getMovie = async ()=>{\n     const json = await (\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n            ).json();\n            setDetail(json.data.movie);\n            setLoading(true);\n\n    };\n\n    useEffect(()=>{\n        getMovie();    \n    }, []);\n    console.log(detail);\n\n    return( \n        <div>\n            {loading ? \n            <div>\n            <h2>{detail.title_long}</h2> \n            <img src={detail.background_image} />\n            <p>language: {detail.language}</p>\n            <p>upload : {detail.date_uploaded}</p>\n            <p>rating : {detail.rating}</p>\n            <ul>\n                {detail.torrents.map((item)=> <li>{item.url}</li>)}\n            </ul>\n            </div>\n             : null}\n        </div>\n    )\n\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\nimport Prac from './example/Prac';\nimport Detail2 from './example/Detail2';\n\nexport default function App(){\n\n  return(\n\n     <Router>\n      <Switch>\n        <Route path=\"/movie/:id\">\n          <Detail />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Prac from './example/Prac'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}